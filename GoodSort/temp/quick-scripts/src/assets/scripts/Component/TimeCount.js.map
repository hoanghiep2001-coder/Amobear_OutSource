{"version":3,"sources":["assets\\scripts\\Component\\TimeCount.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;;AAGtF,mDAAkD;AAE5C,IAAA,KAA4B,EAAE,CAAC,UAAU,EAAxC,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAiB,CAAC;AAIhD;IAA+B,6BAAY;IAA3C;QAAA,qEAkEC;QA/DG,eAAS,GAAW,CAAC,CAAC;QAGtB,oBAAc,GAAa,IAAI,CAAC;QAEhC,qBAAqB;QACrB,iCAAiC;QAEjC,cAAQ,GAAW,CAAC,CAAC;QACrB,cAAQ,GAAW,CAAC,CAAC;QAYrB,wBAAkB,GAAY,KAAK,CAAC;;IA0CxC,CAAC;IAnDa,yBAAK,GAAf;QACI,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QAEpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAE/B,iCAAiC;IACrC,CAAC;IAIM,8BAAU,GAAjB;QACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC;IAGO,+BAAW,GAAnB;QAAA,iBAmBC;QAlBG,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;YAEnB,uBAAU,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;YAE5D,IAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;gBACnB,YAAY;gBACZ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBAC1D,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,SAAO,IAAI,CAAC,QAAU,CAAC;gBACpD,uBAAU,CAAC,EAAE,CAAC,eAAe,GAAG,IAAI,CAAC;gBACrC,oCAAoC;aACvC;;gBAAM,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,QAAM,IAAI,CAAC,QAAU,CAAC;SAE7D;aAAM;YACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,OAAO,CAAC;YACrC,uBAAU,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SAClC;IACL,CAAC;IAGS,6BAAS,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC7B,CAAC;IAGS,6BAAS,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC7B,CAAC;IAGS,0BAAM,GAAhB,UAAiB,EAAU;QACvB,IAAG,uBAAU,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,kBAAkB;YAAE,IAAI,CAAC,UAAU,EAAE,CAAA;IAC/E,CAAC;IA9DD;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;gDACC;IAGtB;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;qDACa;IANvB,SAAS;QAFrB,OAAO;QACP,IAAI,CAAC,qBAAqB,CAAC;OACf,SAAS,CAkErB;IAAD,gBAAC;CAlED,AAkEC,CAlE8B,EAAE,CAAC,SAAS,GAkE1C;AAlEY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Config from \"../config/Config\";\r\nimport { ConfigData } from \"../config/GameConfig\";\r\n\r\nconst {ccclass, property, menu} = cc._decorator;\r\n\r\n@ccclass\r\n@menu(\"Component/TimeCount\")\r\nexport class TimeCount extends cc.Component {\r\n\r\n    @property(cc.Integer)\r\n    timeCount: number = 0;\r\n\r\n    @property(cc.Label)\r\n    countdownLabel: cc.Label = null;\r\n\r\n    // @property(cc.Node)\r\n    // warningLayout: cc.Node = null;\r\n\r\n    timeLeft: number = 0;\r\n    progress: number = 1; \r\n\r\n\r\n    protected start(): void {\r\n        this.progress = 1.0;\r\n\r\n        this.timeLeft = this.timeCount;\r\n\r\n        // this.updateTimeFillProgress();\r\n    }\r\n\r\n\r\n    _isActiveTimeCount: boolean = false;\r\n    public activeTime(): void {\r\n        this._isActiveTimeCount = true;\r\n        this.schedule(this.updateTimer, 1);\r\n    }\r\n\r\n\r\n    private updateTimer(): void {\r\n        if (this.timeLeft > 0) {\r\n            this.timeLeft -= 1;\r\n\r\n            ConfigData.Game.isLoose && (() => this.node.active = false);\r\n\r\n            if(this.timeLeft <= 9) {\r\n                // red color\r\n                this.countdownLabel.node.color = cc.color(255, 0, 0, 255);\r\n                this.countdownLabel.string = `00:0${this.timeLeft}`;\r\n                ConfigData.UI.isActiveWarning = true;\r\n                // this.warningLayout.active = true;\r\n            } else this.countdownLabel.string = `00:${this.timeLeft}`;\r\n\r\n        } else {\r\n            this.unschedule(this.updateTimer);\r\n            this.countdownLabel.string = '00:00';\r\n            ConfigData.Game.isLoose = true;\r\n        }\r\n    }\r\n\r\n\r\n    protected onDisable(): void {\r\n        this.node.active = false;\r\n    }\r\n\r\n\r\n    protected onDestroy(): void {\r\n        this.node.active = false;\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        if(ConfigData.Game.isPlaying && !this._isActiveTimeCount) this.activeTime()\r\n    }\r\n}\r\n"]}