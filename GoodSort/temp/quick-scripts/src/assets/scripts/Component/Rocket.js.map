{"version":3,"sources":["assets\\scripts\\Component\\Rocket.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Board from \"../Board\";\r\nimport { ConfigData } from \"../config/GameConfig\";\r\n// import { PrefabSoundTrack, SoundController } from \"../Controller/SoundController\";\r\nimport Shelf from \"../gameplay/Shelf\";\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('Helper/Rocket')\r\nexport class Rocket extends cc.Component {\r\n    @property(cc.Node)\r\n    bubble: cc.Node = null;\r\n\r\n    @property(cc.ParticleSystem)\r\n    light_vfx: cc.ParticleSystem = null;\r\n\r\n    _rocket: cc.Node = null;\r\n    _Board: Board = null;\r\n\r\n    protected start(): void {\r\n        this._rocket = this.node.getChildByName(\"Rocket\");\r\n        this.activeIdleAnim();\r\n    }\r\n\r\n    _tween: cc.Tween = null;\r\n    private activeIdleAnim(): void {\r\n        const floatRange = 22; // Biên độ dao động\r\n        const duration = cc.math.randomRange(1.2, 2); // Thời gian chuyển động ngẫu nhiên\r\n\r\n        this._tween = cc.tween(this._rocket)\r\n            .by(duration, { y: floatRange }, { easing: cc.easing.sineInOut })\r\n            .by(duration, { y: -floatRange }, { easing: cc.easing.sineInOut })\r\n            .call(() => this.activeIdleAnim()) // Lặp lại vô hạn\r\n            .start();\r\n    }\r\n\r\n\r\n    public activeRocket(): void {\r\n        this.node.scale = 0.3;\r\n        this.disableBubble();\r\n        this.activeVfx();\r\n        if (this._tween) this._tween.stop();\r\n        ConfigData.Game.isCanClick = false;\r\n    }\r\n\r\n\r\n    lerpAngle(from: number, to: number, t: number): number {\r\n        let delta = ((to - from + 540) % 360) - 180; // Tính độ chênh lệch góc theo hướng ngắn nhất\r\n        return from + delta * t;\r\n    }\r\n\r\n\r\n    public moveToAnother(pos: cc.Vec2, item: Shelf, isRocketWithMatch: boolean): void {\r\n        let startPos = this.node.getPosition();\r\n\r\n        // Tính toán góc xoay chính xác\r\n        let direction = pos.sub(startPos);\r\n        let targetAngle = Math.atan2(direction.y, direction.x) * (180 / Math.PI) + 180;\r\n        let currentAngle = this.node.angle;\r\n        let finalAngle = this.lerpAngle(currentAngle, targetAngle, 1); // Sử dụng hàm lerpAngle\r\n\r\n        // Tăng thời gian di chuyển\r\n        let distance = direction.mag();\r\n        let minDist = 100, maxDist = 500;\r\n        let minTime = 0.5, maxTime = 1.5;\r\n        let t = Math.min(1, Math.max(0, (distance - minDist) / (maxDist - minDist)));\r\n        let moveTime = minTime + t * (maxTime - minTime);\r\n\r\n        // === 💫 Tạo điểm control để rocket bay vòng cung ===\r\n        let normal = new cc.Vec2(-direction.y, direction.x).normalize(); // Vector vuông góc với hướng bay\r\n        let arcHeight = distance * 0.68; // Độ cong (30% khoảng cách)\r\n        let controlPoint = startPos.add(direction.mul(0.5)).add(normal.mul(arcHeight)); // Trung điểm + lệch vuông góc\r\n\r\n        item.isActive = false;\r\n\r\n        cc.tween(this.node)\r\n            // .delay(0.15)\r\n            .parallel(\r\n                cc.tween().bezierTo(moveTime, startPos, controlPoint, pos), // Di chuyển theo Bezier\r\n                cc.tween().to(moveTime, { angle: finalAngle }) // Xoay theo hướng chính xác\r\n            )\r\n            .call(() => {\r\n                // SoundController.Instance(SoundController).playPrefabSound(PrefabSoundTrack.clearSound);\r\n                const effectPos = this.node.parent.convertToNodeSpaceAR(\r\n                    this.node.parent.convertToWorldSpaceAR(this.node.getPosition())\r\n                );\r\n                this._Board.createExplosionFx(effectPos);\r\n                this.node.active = false;\r\n                item.node.active = false;\r\n                item.itemInShelfs.forEach(item => { if (item.isValid) item.node.active = false; });\r\n\r\n                ConfigData.Idea.shelfEatenCount += 1;\r\n\r\n                this._Board.updateCombo();\r\n                // this._Board.updateMatchCount();\r\n\r\n                if (isRocketWithMatch) {\r\n                    ConfigData.Idea.shelfExplosionCount += 1;\r\n                    const startPos = this._Board.node.convertToNodeSpaceAR(\r\n                        this.node.parent.convertToWorldSpaceAR(this.node.position)\r\n                    );\r\n                    if (this._Board.shelves.filter(shelf => shelf.isActive).length > 0) {\r\n                        this._Board.create5Rockets(startPos, 0, 5);\r\n                    }\r\n                }\r\n            })\r\n            .start();\r\n    }\r\n\r\n\r\n\r\n\r\n    private disableBubble(): void {\r\n        this.bubble.active = false;\r\n    }\r\n\r\n\r\n    private activeVfx(): void {\r\n        this.light_vfx.node.active = true;\r\n    }\r\n\r\n\r\n}\r\n"]}