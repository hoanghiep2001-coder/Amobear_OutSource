{"version":3,"sources":["assets\\scripts\\Board.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { AdsManager } from \"./AdsManager\";\r\nimport Combo from \"./Combo\";\r\nimport { ProgressBar } from \"./Component/ProgressBar\";\r\nimport { LoopedSoundTrack, SoundController } from \"./Controller/SoundController\";\r\n// import { PrefabSoundTrack, SoundController } from \"./Controller/SoundController\";\r\nimport Hand from \"./Hand\";\r\nimport Config from \"./config/Config\";\r\nimport { levelConfig, layoutConfig, adConfig, ConfigData } from \"./config/GameConfig\";\r\nimport Item from \"./gameplay/Item\";\r\nimport Shelf, { ShelfType } from \"./gameplay/Shelf\";\r\n// import Slot from \"./gameplay/Slot\";\r\n\r\nconst { ccclass, property, executeInEditMode } = cc._decorator;\r\n\r\n\r\nexport const enum BoardState {\r\n  Generating,\r\n  Playing,\r\n  Lock,\r\n}\r\n\r\n\r\n@ccclass\r\n// @executeInEditMode\r\nexport default class Board extends cc.Component {\r\n  static _instance: Board | null = null;\r\n  static get Instance(): Board {\r\n    if (this._instance == null) {\r\n      this._instance = cc.director\r\n        .getScene()\r\n        ?.getComponentInChildren(Board) as Board;\r\n    }\r\n    return this._instance;\r\n  }\r\n  @property(Hand)\r\n  hand: Hand;\r\n  @property(Combo)\r\n  combo: Combo;\r\n\r\n\r\n  @property(cc.Camera)\r\n  camera: cc.Camera = null;\r\n\r\n  @property([cc.Prefab])\r\n  shelfPrefab: cc.Prefab;\r\n\r\n  @property([cc.Node])\r\n  startPos: cc.Node;\r\n\r\n  @property([cc.Node])\r\n  shelfContainer: cc.Node;\r\n  @property([cc.Node])\r\n  itemContainer: cc.Node;\r\n\r\n  @property(cc.Button)\r\n  buttonOpenLink: cc.Button;\r\n  @property(cc.Button)\r\n  buttonOpenSmall: cc.Button;\r\n\r\n  @property(cc.Node)\r\n  endCard: cc.Node = null;\r\n\r\n  @property(cc.Prefab)\r\n  explosionFx: cc.Prefab = null;\r\n\r\n  @property(Config)\r\n  Config: Config = null;\r\n\r\n  @property(ProgressBar)\r\n  progressBar: ProgressBar = null;\r\n\r\n  public moveCount: number = 0;\r\n  public matchCount: number = 0;\r\n\r\n  public shelves: Shelf[] = [];\r\n  private boardState: BoardState;\r\n  private firstMatchId: number = -1;\r\n\r\n\r\n  @property(AdsManager)\r\n  AdsManager: AdsManager = null;\r\n\r\n  start() {\r\n    // this.initializeShelves()\r\n    this.shelves = [];\r\n    this.generateLevel();\r\n\r\n    this.buttonOpenLink.node.on(\r\n      \"click\",\r\n      () => {\r\n        // SoundController.Instance(SoundController).stopAllSound();\r\n        this.AdsManager.installHandle();\r\n      },\r\n      this\r\n    );\r\n    this.buttonOpenSmall.node.on(\r\n      \"click\",\r\n      () => {\r\n        // SoundController.Instance(SoundController).stopAllSound();\r\n        this.AdsManager.installHandle();\r\n      },\r\n      this\r\n    );\r\n  }\r\n\r\n\r\n  isLock() {\r\n    return this.boardState == BoardState.Lock;\r\n  }\r\n\r\n  isGenerating() {\r\n    return this.boardState == BoardState.Generating;\r\n  }\r\n\r\n  setBoardState(state: BoardState) {\r\n    this.boardState = state;\r\n  }\r\n\r\n\r\n  updateCombo() {\r\n    // this.combo.updateCombo();\r\n  }\r\n\r\n\r\n  updateMatchCount() {\r\n    this.matchCount++;\r\n    //here\r\n    // SoundController.Instance(SoundController).playPrefabSound(PrefabSoundTrack.clearSound);\r\n\r\n    if (this.matchCount > adConfig.matchTimeBeforeShowEndCard - 1) {\r\n      this.endCard.active = true;\r\n      ConfigData.Game.isWin = true;\r\n      // this.buttonOpenLink.node.active = true;\r\n    }\r\n  }\r\n\r\n\r\n  public createExplosionFx(effectPos: cc.Vec2): void {\r\n    const _fx = cc.instantiate(this.explosionFx);\r\n    _fx.parent = this.node;\r\n    _fx.setPosition(effectPos);\r\n    this.scheduleOnce(() => {\r\n      _fx.active = false;\r\n    }, 1.68)\r\n  }\r\n\r\n\r\n  generateLevel() {\r\n    this.boardState = BoardState.Generating;\r\n    this.generateLayerShelves();\r\n  }\r\n\r\n\r\n  hideHand() {\r\n    if (this.hand.node.active) {\r\n      this.hand.node.active = false;\r\n    }\r\n  }\r\n\r\n\r\n  findHandStartPoint() {\r\n    for (let i = 0; i < this.shelves.length; i++) {\r\n      if (i % 3 != 1) continue;\r\n      for (let j = 0; j < this.shelves[i].slots.length; j++) {\r\n        if (!this.shelves[i].slots[j].isEmpty()) {\r\n          this.hand.setStartItem(this.shelves[i].slots[j].item);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  findHandEndPoint() {\r\n    for (let i = 0; i < this.shelves.length; i++) {\r\n      for (let j = 0; j < this.shelves[i].slots.length; j++) {\r\n        if (this.shelves[i].slots[j].isEmpty()) {\r\n          this.hand.setEndSlot(this.shelves[i].slots[j]);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  generateLayerShelves() {\r\n    this.shelfContainer.scale = 0.6;\r\n    this.itemContainer.scale = 0.6;\r\n    const size: cc.Size = this.shelfPrefab.data.getContentSize();\r\n    const { row, col } = levelConfig;\r\n    console.log(this.node.children);\r\n    \r\n    let possiblePositions: { i: number, j: number }[] = [];\r\n\r\n    for (let i = 0; i < row; i++) {\r\n      for (let j = 0; j < col; j++) {\r\n        possiblePositions.push({ i, j });\r\n      }\r\n    }\r\n\r\n    for (let k = possiblePositions.length - 1; k > 0; k--) {\r\n      let randIdx = Math.floor(Math.random() * (k + 1));\r\n      [possiblePositions[k], possiblePositions[randIdx]] = [possiblePositions[randIdx], possiblePositions[k]];\r\n    }\r\n\r\n    for (let i = 0; i < row; i++) {\r\n      let index1 = i;\r\n      for (let j = 0; j < col; j++) {\r\n        let index2 = j;\r\n        this.scheduleOnce(() => {\r\n          const newShelf: cc.Node = cc.instantiate(this.shelfPrefab);\r\n          this.shelfContainer.addChild(newShelf);\r\n          const pos = this.startPos\r\n            .getPosition()\r\n            .add(\r\n              new cc.Vec2(\r\n                (size.width + layoutConfig.offsetX) * j,\r\n                -(size.height + layoutConfig.offsetY) * i\r\n              )\r\n            );\r\n          newShelf.setPosition(pos);\r\n\r\n          const shelf: Shelf = newShelf.getComponent(Shelf);\r\n\r\n          if (shelf != null) {\r\n            if (j == 0) {\r\n              shelf.setShelfType(ShelfType.Left);\r\n            } else if (j == col - 1) {\r\n              shelf.setShelfType(ShelfType.Right);\r\n            } else {\r\n              shelf.setShelfType(ShelfType.Middle);\r\n            }\r\n\r\n            shelf._Board = this;\r\n            this.shelves.push(shelf);\r\n          }\r\n          newShelf.setScale(0);\r\n          cc.tween(newShelf).to(0.1, { scale: 1 }).call(() => {\r\n            if (index1 == row - 1 && index2 == col - 1) {\r\n              this.generateLayerItems();\r\n            }\r\n          }).start();\r\n        }, index1 * 0.1 + index2 * 0.05);\r\n      }\r\n    }\r\n\r\n    this.scheduleOnce(() => {\r\n      ConfigData.Game.isCanClick = true;\r\n    }, 1.2)\r\n\r\n  }\r\n\r\n\r\n  randomEmpty(n: number): number[] {\r\n    return Array(n).fill(6);\r\n    let result: number[];\r\n    let sum: number;\r\n\r\n    do {\r\n      result = [];\r\n      sum = 0;\r\n      for (let i = 0; i < n; i++) {\r\n        const randomValue = Math.floor(Math.random() * 3) + 5; // Random number between 5 and 7\r\n        result.push(randomValue);\r\n        sum += randomValue;\r\n      }\r\n    } while (sum % 3 !== 0);\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  generateLayerItems() {\r\n    const randomEmptySlots: number[] = this.randomEmpty(\r\n      levelConfig.numberLayer\r\n    );\r\n\r\n    let totalSet: number =\r\n      levelConfig.row * levelConfig.col * levelConfig.numberLayer;\r\n    let numPerItem = Math.floor(totalSet / levelConfig.numberItem) * 3;\r\n    let remainSet = (totalSet * 3 - numPerItem * levelConfig.numberItem) / 3;\r\n    let ids: number[] = [];\r\n    if (totalSet <= levelConfig.numberItem) {\r\n      ids = new Array(totalSet).fill(3);\r\n    } else {\r\n      ids = new Array(levelConfig.numberItem);\r\n      ids.fill(numPerItem);\r\n    }\r\n    for (let i = 0; i < remainSet; i++) {\r\n      ids[Math.floor(Math.random() * ids.length)] += 3;\r\n    }\r\n\r\n    let firstMatchShelf = Math.floor(this.shelves.length / 2) + 1;\r\n\r\n    for (let layer = levelConfig.numberLayer - 1; layer >= 0; layer--) {\r\n      let lay = layer;\r\n      this.scheduleOnce(() => {\r\n\r\n        let items: Item[] = [];\r\n        this.shelves.forEach((shelf, index1) => {\r\n          if (index1 == firstMatchShelf && lay == 0) {\r\n            let rIndex = Math.floor(Math.random() * ids.length);\r\n            this.firstMatchId = rIndex;\r\n            for (let index = 0; index < 3; index++) {\r\n              let item = shelf.addItem(rIndex, index, lay, this.itemContainer, this, this.Config);\r\n              if (index < 2) {\r\n                ids[rIndex]--;\r\n              }\r\n              else {\r\n                this.hand.setEndPosition(item.node.position);\r\n                shelf.slots[index].setEmpty();\r\n                item.node.destroy();\r\n              }\r\n            }\r\n\r\n          }\r\n          else {\r\n            for (let index = 0; index < 3; index++) {\r\n              let rIndex = Math.floor(Math.random() * ids.length);\r\n              if (\r\n                ids[rIndex] <= 0 ||\r\n                (index == 2 && shelf.testMatch(rIndex, lay))\r\n              ) {\r\n                let found = false;\r\n                for (let k = rIndex + 1; k < ids.length; k++) {\r\n                  if (ids[k] > 0 && !shelf.testMatch(k, lay)) {\r\n                    rIndex = k;\r\n                    found = true;\r\n                    break;\r\n                  }\r\n                }\r\n                if (!found) {\r\n                  for (let m = rIndex - 1; m >= 0; m--) {\r\n                    if (ids[m] > 0 && !shelf.testMatch(m, lay)) {\r\n                      rIndex = m;\r\n                      break;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              ids[rIndex]--;\r\n              let item: Item = shelf.addItem(rIndex, index, lay, this.itemContainer, this, this.Config)\r\n              items.push(item);\r\n            }\r\n          }\r\n\r\n        });\r\n        for (let k = 0; k < randomEmptySlots[lay] / 3; k++) {\r\n          const rIndex = Math.floor(Math.random() * items.length);\r\n          ids[items[rIndex].id] += 3;\r\n          if (lay == 0) {\r\n            items[rIndex].currentSlot.setEmpty();\r\n          } else {\r\n            for (let m = 0; m < this.shelves.length; m++) {\r\n              this.shelves[m].removeItem(items[rIndex]);\r\n            }\r\n          }\r\n          let remain = 2;\r\n          for (let m = 0; m < items.length; m++) {\r\n            if (items[m].id == items[rIndex].id && items[rIndex] !== items[m]) {\r\n              const it = items[m];\r\n              if (lay == 0) {\r\n                it.currentSlot.setEmpty();\r\n              } else {\r\n                for (let p = 0; p < this.shelves.length; p++) {\r\n                  this.shelves[p].removeItem(it);\r\n                }\r\n              }\r\n              it.node.destroy();\r\n              remain--;\r\n              if (remain <= 0) break;\r\n            }\r\n          }\r\n\r\n          items[rIndex].node.destroy();\r\n        }\r\n        if (lay == 0) {\r\n          let added = false;\r\n          this.shelves.forEach(shelf2 => {\r\n            shelf2.slots.forEach((slot, index2) => {\r\n              if (slot.isEmpty() && shelf2 != this.shelves[firstMatchShelf] && !added) {\r\n                let item = shelf2.addItem(this.firstMatchId, index2, lay, this.itemContainer, this, this.Config);\r\n                this.hand.setStartItem(item);\r\n                added = true;\r\n              }\r\n            })\r\n          });\r\n        }\r\n      }, 0.5 * (levelConfig.numberLayer - 1 - lay))\r\n    }\r\n  }\r\n\r\n\r\n  _isCallCompleteGen: boolean = false;\r\n  _boardTruePos: cc.Vec2 = new cc.Vec2(10, -400);\r\n  isClickedStartCart: boolean = false;\r\n  handleCompleteGenerate() {\r\n    if(this._isCallCompleteGen) return;\r\n\r\n    if(ConfigData.OutSource.isHasCart && !this.isClickedStartCart) return;\r\n\r\n    this.boardState = BoardState.Playing;\r\n    this._isCallCompleteGen = true;\r\n    this.shelfContainer.children.reverse().forEach((child, index) => {\r\n      child.setSiblingIndex(index);\r\n    });\r\n    cc.tween(this.node).to(0.25, {x: this._boardTruePos.x, y: this._boardTruePos.y}, {easing: cc.easing.sineIn}).start()\r\n    cc.tween(this.shelfContainer).to(0.25, { scale: 1 }, { easing: \"quadOut\" }).start();\r\n    cc.tween(this.itemContainer).to(0.25, { scale: 1 }, { easing: \"quadOut\" }).call(() => {\r\n      this.scheduleOnce(() => {\r\n        this.hand.startMove();\r\n        !ConfigData.Game.isPlayedBgSound && SoundController.Instance(SoundController).playDefaultSound(LoopedSoundTrack.bgSound);\r\n        ConfigData.Game.isPlayedBgSound = true;\r\n        ConfigData.Game.isPlaying = true;\r\n        // cc.log(\"gen completed!\");\r\n      }, 0.5)\r\n    }).start();\r\n  }\r\n\r\n\r\n  findFirstEmptySlot() {\r\n    for (let i = 0; i < this.shelves.length; i++) {\r\n      for (let j = 0; j < this.shelves[i].slots.length; j++) {\r\n        if (this.shelves[i].slots[j].isEmpty()) {\r\n          return this.shelves[i].slots[j];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  hideItemsLayer(layer: number) {\r\n    this.shelves.forEach((shelf) => {\r\n      if (layer >= shelf.layers.length) return;\r\n      if (shelf.layers[layer] === null || shelf.layers[layer] === undefined) return;\r\n      for (let i = 0; i < shelf.layers[layer].length; i++) {\r\n        if (shelf.layers[layer][i] === null || shelf.layers[layer][i] === undefined) continue;\r\n        shelf.layers[layer][i].node.active = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}